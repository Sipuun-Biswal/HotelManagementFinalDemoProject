@model HotelManagementCoreMvcFrontend.Models.User
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Edit";
    var role = HttpContextAccessor.HttpContext.Session.GetString("Role");
}

<div class="container d-flex justify-content-center align-items-center" style="min-height: 90vh;">
    <div class="col-md-6">
        <div class="card shadow-sm p-4 mb-5 bg-white rounded">
            <h2 class="text-center mb-4">Edit Profile</h2>
            <hr />
            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <label asp-for="FirstName" class="control-label">First Name<span class="text-danger">*</span></label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="LastName" class="control-label">Last Name<span class="text-danger">*</span></label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Email" class="control-label">Email<span class="text-danger">*</span></label>
                    <input asp-for="Email" class="form-control" readonly/>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Role" class="control-label">Role</label>
                    <input asp-for="Role" class="form-control" readonly />
                </div>
                <div class="form-group mb-3">
                    <input asp-for="Password" class="form-control" hidden />
                </div>
                <div class="form-group mb-3">
                    <input asp-for="IsEmailVerified" class="form-control" hidden />
                </div>
                <div class="form-group mb-4">
                    <label class="form-label">Profile Image</label>

                    <!-- Show current profile image if it exists -->
                    <div id="profileImageContainer" class="mb-3 d-flex align-items-center">
                        <input asp-for="ProfileImage" class="form-control"  hidden/>
                        @if (!string.IsNullOrEmpty(Model.ProfileImage))
                        {
                            <img id="profileImage" src="@Model.ProfileImage" class="img-thumbnail rounded-circle" style="width: 150px; height: 150px; object-fit: cover;" alt="Profile Image" />
                            <button type="button" class="btn btn-danger btn-sm ms-3" id="deleteProfileImage">Remove</button>
                        }
                        else
                        {
                            <img id="profileImage" src="~/images/19639017-0b98-4490-9a27-bd5268cb977b_user-profile-icon-free-vector.jpg" class="img-thumbnail rounded-circle" style="width: 150px; height: 150px; object-fit: cover;" alt="Default Profile Image" />
                        }
                    </div>

                    <!-- Hidden field to track deletion of profile image -->
                    <input type="hidden" id="deleteImageFlag" name="deleteImageFlag" value="false" />

                    <!-- Input for uploading a new profile image -->
                    <input name="image" class="form-control" type="file" />
                </div>

                <div class="d-flex gap-1">
                    <input type="submit" value="Save" class="btn btn-primary btn-md" />
                    @if (role == "Admin")
                    {
                        <a asp-action="index" class="btn btn-secondary btn-md">Back to List</a>
                    }
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Set delete flag when delete button is clicked
        document.getElementById('deleteProfileImage')?.addEventListener('click', function () {
            if (confirm('Are you sure you want to delete the profile image?')) {
                document.getElementById('deleteImageFlag').value = 'true';
                // Replace the current image with the default image
                document.getElementById('profileImage').src = '~/images/19639017-0b98-4490-9a27-bd5268cb977b_user-profile-icon-free-vector.jpg';
                // Hide the delete button since there's no image to delete anymore
                this.style.display = 'none';
            }
        });
    </script>
}

<!-- Custom CSS -->
<style>
    body {
        background-color: #e9ecef; /* Light gray background */
    }

    .card {
        background-color: #fff; /* White background for the form */
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

    .btn-primary {
        background-color: #007bff; /* Bootstrap primary color */
        border-color: #007bff;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Darker shade on hover */
        }

    .btn-secondary {
        background-color: #6c757d; /* Bootstrap secondary color */
        border-color: #6c757d;
        transition: background-color 0.3s ease;
    }

        .btn-secondary:hover {
            background-color: #5a6268; /* Darker shade on hover */
        }

    .form-control {
        padding: 10px;
        font-size: 16px;
    }

    .form-label {
        font-weight: 500;
        color: #495057;
    }

    .container {
        height: auto; /* Ensures the container is dynamically sized */
    }

    h2 {
        color: #343a40;
    }
</style>
