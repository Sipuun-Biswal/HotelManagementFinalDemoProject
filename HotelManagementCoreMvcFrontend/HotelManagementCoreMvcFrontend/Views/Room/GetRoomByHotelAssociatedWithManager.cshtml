@model IEnumerable<HotelManagementCoreMvcFrontend.Models.Room>

@{
    ViewData["Title"] = "Room List";
    var SuccessRoom = TempData["Room Success"] as string;
    var editRoom = TempData["RoomEdit"] as string;
}
@if (!string.IsNullOrEmpty(SuccessRoom))
{
    <div class="toast-container position-fixed top-0 end-0 p-3">
        <div class="toast align-items-center text-bg-success border-0" id="loginToast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    @SuccessRoom
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
}
@if (!string.IsNullOrEmpty(editRoom))
{
    <div class="toast-container position-fixed top-0 end-0 p-3">
        <div class="toast align-items-center text-bg-success border-0" id="loginToast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    @editRoom
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
}
<h3 class="mb-4">@ViewData["Title"]</h3>

<p>
    <a asp-action="CreateRoom" class="btn btn-success mb-3">Add Room</a>
</p>

<div class="table-responsive">
    <table id="roomTable" class="table table-striped table-hover table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Hotel Name</th>
                <th>Room No</th>
                <th>Price</th>
                <th>Status for Today</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.HotelName)</td>
                    <td>@Html.DisplayFor(modelItem => item.RoomNo)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>
                        @if (item.IsAvailable)
                        {
                            <span class="badge bg-success">Available</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Not Available</span>
                        }
                    </td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                        <form asp-action="DeleteConformation" asp-route-id="@item.Id" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this room?');">
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                        @Html.ActionLink("Book", "CreateBooking", "Booking", new { id = item.Id }, new { @class = "btn btn-success btn-sm" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            var warning = '@TempData["Warning"]';
            if (warning) {
                alert(warning);

            }
            $('#roomTable').DataTable({
                "pageLength": 5,
                "lengthMenu": [5, 10, 25, 50],
                "columnDefs": [
                    { "orderable": false, "targets": [-2, -1] }
                ],
                "dom": '<"top"f>rt<"bottom"lp><"clear">'
            });
        });
    </script>
}
<script>
    window.onload = function () {
        var toastEl = document.getElementById('loginToast');
        if (toastEl) {
            var toast = new bootstrap.Toast(toastEl);
            toast.show();
        }
    };
</script>
